#!/usr/bin/env bash

set -e

PROJECT_ROOT=$(cd $(dirname $0)/.. && pwd)
FAIL=0

echo -e "ü¶òü¶òü¶ò BUILDING GROUPAROO MONOREPO ü¶òü¶ò"
echo -e "dir: $PROJECT_ROOT"
echo -e ""

# 0. build dependancies
echo "--- (re)building dependancies in parallel ---"
DEPS=""
for p in $PROJECT_ROOT/node_modules/**/package.json ; do
  # matching "install" will find both postinstall and install scripts!
  if grep -q "install" $p; then
    DEPS="$DEPS $(basename $(dirname $p))"
  fi
done
echo "$DEPS"
npm rebuild $DEPS
echo -e  "\r\n‚ú® npm rebuild complete\r\n"

# 1. build core/api
echo "--- building core/api ---"
cd $PROJECT_ROOT/core/api
npm run build-api
echo -e "\r\n‚ú® core API compiled from typescript\r\n"

# 2. build plugins
echo "--- building plugins in parallel ---"
for d in $PROJECT_ROOT/plugins/*/* ; do
    (cd "$d" && npm run prepare) &
done
for job in `jobs -p`
do
    wait $job || let "FAIL+=1"
done
if [ "$FAIL" == "0" ];
then
    echo -e "\r\n‚ú® all plugins built\r\n"
else
    echo -e "\r\n‚ùóÔ∏è error building plugins\r\n"
    exit 1
fi

# 3. build main app
echo "--- building the main app ---"
MAIN_APP=$(sed -n 1p $PROJECT_ROOT/Procfile | awk -F= '$1=="GROUPAROO_MONOREPO_APP"{print $2}' RS=' ')
echo "    the main app is $MAIN_APP"
cd $PROJECT_ROOT/apps/$MAIN_APP
npm run prepare

echo -e "\r\nDone!\r\n"
